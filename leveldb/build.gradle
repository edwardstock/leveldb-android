/*
 * Stojan Dimitrovski
 *
 * Copyright (c) 2019, Stojan Dimitrovski <sdimitrovski@gmail.com>
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation and/or
 * other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OFz SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = "com.edwardstock.android"
version = "2.0.1"

ext {
    buildArtifactName = project.name
    buildArtifactVersion = version
    buildArtifactGroup = group

    pomName = "leveldb"
    pomUrl = "https://github.com/edwardstock/leveldb"
    pomScm = {
        connection = "scm:git:git://github.com/edwardstock/leveldb.git"
        url = pomUrl
    }
    pomInceptionYear = "2014"
    pomContributors = {}
    pomDescription = "LevelDB bindings for Android."
    pomDevelopers = {
        developer {
            id = "hf"
            name = "Stojan Dimitrovski"
            email = "sdimitrovski@gmail.com"
            roles = ["creator"]
        }
        developer {
            id = "edwardstock"
            name = "Eduard Maximovich"
            email = "edwatd.vstock@gmail.com"
            roles = ["forker"]
            timezone = "Europe/Moscow"
        }
    }
    pomLicenses = {
        license {
            name = "BSD 3-Clause"
            url = "https://github.com/hf/leveldb-android/blob/master/LICENSE.txt"
            distribution = "repo"
        }
    }
}

Properties localProps = new Properties()
localProps.load(project.rootProject.file('gradle.properties').newDataInputStream())

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 2
        versionName version

        testApplicationId "com.github.hf.leveldb.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        testHandleProfiling true
        testFunctionalTest true

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }
    }

    testOptions {
        animationsDisabled true
        unitTests.all {

        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
            version "3.10.2"
        }
    }

    sourceSets {
        main {
            jni.srcDirs = [
                'src/main/cpp/bindings',
            ]
            jniLibs.srcDirs = ['libs']
            java.srcDirs = [
                    'src/main/java',
            ]
        }
    }
    
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'com.google.guava:guava:26.0-android'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'commons-io:commons-io:2.6'
}

apply from: '../scripts/maven_publish.gradle'
